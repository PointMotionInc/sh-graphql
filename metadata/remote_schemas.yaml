- name: Countries
  definition:
    url: https://countries.trevorblades.com/
    timeout_seconds: 60
  comment: ""
- name: PHI
  definition:
    url_from_env: PHI_REMOTE_SCHEMA_URL
    timeout_seconds: 60
    customization: {}
    headers:
      - name: x-hasura-admin-secret
        value_from_env: PHI_REMOTE_SCHEMA_ADMIN_SECRET
      - name: x-hasura-role
        value: admin
      - name: x-hasura-env
        value_from_env: HASURA_ENV
    forward_client_headers: true
  comment: ""
  permissions:
    - role: org_admin
      definition:
        schema: |
          schema {
            query: query_root
          }
          scalar jsonb
          scalar timestamptz
          scalar uuid
          type health_records {
            createdAt: timestamptz!
            env: String
            id: uuid!
            organizationId: uuid
            patient: uuid
            recordData: jsonb
            recordType: String!
            updatedAt: timestamptz!
          }
          type query_root {
            health_records(distinct_on: [health_records_select_column!], limit: Int, offset: Int, order_by: [health_records_order_by!], where: health_records_bool_exp @preset(value: {organizationId:{_eq:"x-hasura-organization-id"}})): [health_records!]!
            health_records_by_pk(id: uuid!): health_records
          }
          enum health_records_select_column {
            createdAt
            env
            id
            organizationId
            patient
            recordData
            recordType
            updatedAt
          }
          enum order_by {
            asc
            asc_nulls_first
            asc_nulls_last
            desc
            desc_nulls_first
            desc_nulls_last
          }
          input String_comparison_exp {
            _eq: String
            _gt: String
            _gte: String
            _ilike: String
            _in: [String!]
            _iregex: String
            _is_null: Boolean
            _like: String
            _lt: String
            _lte: String
            _neq: String
            _nilike: String
            _nin: [String!]
            _niregex: String
            _nlike: String
            _nregex: String
            _nsimilar: String
            _regex: String
            _similar: String
          }
          input health_records_bool_exp {
            _and: [health_records_bool_exp!]
            _not: health_records_bool_exp
            _or: [health_records_bool_exp!]
            createdAt: timestamptz_comparison_exp
            env: String_comparison_exp
            id: uuid_comparison_exp
            organizationId: uuid_comparison_exp
            patient: uuid_comparison_exp
            recordData: jsonb_comparison_exp
            recordType: String_comparison_exp
            updatedAt: timestamptz_comparison_exp
          }
          input health_records_order_by {
            createdAt: order_by
            env: order_by
            id: order_by
            organizationId: order_by
            patient: order_by
            recordData: order_by
            recordType: order_by
            updatedAt: order_by
          }
          input jsonb_cast_exp {
            String: String_comparison_exp
          }
          input jsonb_comparison_exp {
            _cast: jsonb_cast_exp
            _contained_in: jsonb
            _contains: jsonb
            _eq: jsonb
            _gt: jsonb
            _gte: jsonb
            _has_key: String
            _has_keys_all: [String!]
            _has_keys_any: [String!]
            _in: [jsonb!]
            _is_null: Boolean
            _lt: jsonb
            _lte: jsonb
            _neq: jsonb
            _nin: [jsonb!]
          }
          input timestamptz_comparison_exp {
            _eq: timestamptz
            _gt: timestamptz
            _gte: timestamptz
            _in: [timestamptz!]
            _is_null: Boolean
            _lt: timestamptz
            _lte: timestamptz
            _neq: timestamptz
            _nin: [timestamptz!]
          }
          input uuid_comparison_exp {
            _eq: uuid
            _gt: uuid
            _gte: uuid
            _in: [uuid!]
            _is_null: Boolean
            _lt: uuid
            _lte: uuid
            _neq: uuid
            _nin: [uuid!]
          }
    - role: therapist
      definition:
        schema: |
          schema {
            query: query_root
          }
          scalar jsonb
          scalar timestamptz
          scalar uuid
          type health_records {
            createdAt: timestamptz!
            id: uuid!
            organizationId: uuid
            patient: uuid
            recordData: jsonb
            recordType: String!
            updatedAt: timestamptz!
          }
          type query_root {
            health_records(distinct_on: [health_records_select_column!], limit: Int, offset: Int, order_by: [health_records_order_by!], where: health_records_bool_exp @preset(value: {organizationId:{_eq:"x-hasura-organization-id"}})): [health_records!]!
            health_records_by_pk(id: uuid!): health_records
          }
          enum health_records_select_column {
            createdAt
            env
            id
            organizationId
            patient
            recordData
            recordType
            updatedAt
          }
          enum order_by {
            asc
            asc_nulls_first
            asc_nulls_last
            desc
            desc_nulls_first
            desc_nulls_last
          }
          input String_comparison_exp {
            _eq: String
            _gt: String
            _gte: String
            _ilike: String
            _in: [String!]
            _iregex: String
            _is_null: Boolean
            _like: String
            _lt: String
            _lte: String
            _neq: String
            _nilike: String
            _nin: [String!]
            _niregex: String
            _nlike: String
            _nregex: String
            _nsimilar: String
            _regex: String
            _similar: String
          }
          input health_records_bool_exp {
            _and: [health_records_bool_exp!]
            _not: health_records_bool_exp
            _or: [health_records_bool_exp!]
            createdAt: timestamptz_comparison_exp
            env: String_comparison_exp
            id: uuid_comparison_exp
            organizationId: uuid_comparison_exp
            patient: uuid_comparison_exp
            recordData: jsonb_comparison_exp
            recordType: String_comparison_exp
            updatedAt: timestamptz_comparison_exp
          }
          input health_records_order_by {
            createdAt: order_by
            env: order_by
            id: order_by
            organizationId: order_by
            patient: order_by
            recordData: order_by
            recordType: order_by
            updatedAt: order_by
          }
          input jsonb_cast_exp {
            String: String_comparison_exp
          }
          input jsonb_comparison_exp {
            _cast: jsonb_cast_exp
            _contained_in: jsonb
            _contains: jsonb
            _eq: jsonb
            _gt: jsonb
            _gte: jsonb
            _has_key: String
            _has_keys_all: [String!]
            _has_keys_any: [String!]
            _in: [jsonb!]
            _is_null: Boolean
            _lt: jsonb
            _lte: jsonb
            _neq: jsonb
            _nin: [jsonb!]
          }
          input timestamptz_comparison_exp {
            _eq: timestamptz
            _gt: timestamptz
            _gte: timestamptz
            _in: [timestamptz!]
            _is_null: Boolean
            _lt: timestamptz
            _lte: timestamptz
            _neq: timestamptz
            _nin: [timestamptz!]
          }
          input uuid_comparison_exp {
            _eq: uuid
            _gt: uuid
            _gte: uuid
            _in: [uuid!]
            _is_null: Boolean
            _lt: uuid
            _lte: uuid
            _neq: uuid
            _nin: [uuid!]
          }
    - role: patient
      definition:
        schema: |
          schema {
            query: query_root
          }
          scalar jsonb
          scalar timestamptz
          scalar uuid
          type health_records {
            createdAt: timestamptz!
            id: uuid!
            organizationId: uuid
            patient: uuid
            recordData: jsonb
            recordType: String!
            updatedAt: timestamptz!
          }
          type query_root {
            health_records(distinct_on: [health_records_select_column!], limit: Int, offset: Int, order_by: [health_records_order_by!], where: health_records_bool_exp @preset(value: {patient:{_eq:"x-hasura-user-id"}})): [health_records!]!
            health_records_by_pk(id: uuid!): health_records
          }
          enum health_records_select_column {
            createdAt
            id
            organizationId
            patient
            recordData
            recordType
            updatedAt
          }
          enum order_by {
            asc
            asc_nulls_first
            asc_nulls_last
            desc
            desc_nulls_first
            desc_nulls_last
          }
          input String_comparison_exp {
            _eq: String
            _gt: String
            _gte: String
            _ilike: String
            _in: [String!]
            _iregex: String
            _is_null: Boolean
            _like: String
            _lt: String
            _lte: String
            _neq: String
            _nilike: String
            _nin: [String!]
            _niregex: String
            _nlike: String
            _nregex: String
            _nsimilar: String
            _regex: String
            _similar: String
          }
          input health_records_bool_exp {
            _and: [health_records_bool_exp!]
            _not: health_records_bool_exp
            _or: [health_records_bool_exp!]
            createdAt: timestamptz_comparison_exp
            id: uuid_comparison_exp
            organizationId: uuid_comparison_exp
            patient: uuid_comparison_exp
            recordData: jsonb_comparison_exp
            recordType: String_comparison_exp
            updatedAt: timestamptz_comparison_exp
          }
          input health_records_order_by {
            createdAt: order_by
            id: order_by
            organizationId: order_by
            patient: order_by
            recordData: order_by
            recordType: order_by
            updatedAt: order_by
          }
          input jsonb_cast_exp {
            String: String_comparison_exp
          }
          input jsonb_comparison_exp {
            _cast: jsonb_cast_exp
            _contained_in: jsonb
            _contains: jsonb
            _eq: jsonb
            _gt: jsonb
            _gte: jsonb
            _has_key: String
            _has_keys_all: [String!]
            _has_keys_any: [String!]
            _in: [jsonb!]
            _is_null: Boolean
            _lt: jsonb
            _lte: jsonb
            _neq: jsonb
            _nin: [jsonb!]
          }
          input timestamptz_comparison_exp {
            _eq: timestamptz
            _gt: timestamptz
            _gte: timestamptz
            _in: [timestamptz!]
            _is_null: Boolean
            _lt: timestamptz
            _lte: timestamptz
            _neq: timestamptz
            _nin: [timestamptz!]
          }
          input uuid_comparison_exp {
            _eq: uuid
            _gt: uuid
            _gte: uuid
            _in: [uuid!]
            _is_null: Boolean
            _lt: uuid
            _lte: uuid
            _neq: uuid
            _nin: [uuid!]
          }
