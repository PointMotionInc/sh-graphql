table:
  name: patient
  schema: public
object_relationships:
  - name: organization
    using:
      foreign_key_constraint_on: organizationId
  - name: primaryTherapistUser
    using:
      foreign_key_constraint_on: primaryTherapist
  - name: subscriptionBySubscription
    using:
      foreign_key_constraint_on: subscription
  - name: user
    using:
      foreign_key_constraint_on: onboardedBy
array_relationships:
  - name: games
    using:
      foreign_key_constraint_on:
        column: patient
        table:
          name: game
          schema: public
  - name: patient_notes
    using:
      foreign_key_constraint_on:
        column: patient
        table:
          name: patient_notes
          schema: public
  - name: sessions
    using:
      foreign_key_constraint_on:
        column: patient
        table:
          name: session
          schema: public
remote_relationships:
  - definition:
      hasura_fields:
        - email
      remote_field:
        health_records_by_pk:
          arguments:
            id: $email
          field:
            recordData:
              arguments: {}
      remote_schema: PHI
    name: pii_email
  - definition:
      hasura_fields:
        - firstName
      remote_field:
        health_records_by_pk:
          arguments:
            id: $firstName
          field:
            recordData:
              arguments: {}
      remote_schema: PHI
    name: pii_firstName
  - definition:
      hasura_fields:
        - lastName
      remote_field:
        health_records_by_pk:
          arguments:
            id: $lastName
          field:
            recordData:
              arguments: {}
      remote_schema: PHI
    name: pii_lastName
  - definition:
      hasura_fields:
        - nickname
      remote_field:
        health_records_by_pk:
          arguments:
            id: $nickname
          field:
            recordData:
              arguments: {}
      remote_schema: PHI
    name: pii_nickname
  - definition:
      hasura_fields:
        - phoneNumber
      remote_field:
        health_records_by_pk:
          arguments:
            id: $phoneNumber
          field:
            recordData:
              arguments: {}
      remote_schema: PHI
    name: pii_phoneNumber
insert_permissions:
  - role: org_admin
    permission:
      check: {}
      set:
        organizationId: x-hasura-organization-id
      columns:
        - email
        - firstName
        - lastName
        - namePrefix
        - phoneCountryCode
        - phoneNumber
  - role: therapist
    permission:
      check: {}
      set:
        onboardedBy: x-hasura-user-id
        organizationId: x-hasura-organization-id
        primaryTherapist: x-hasura-user-id
      columns:
        - careGiverEmail
        - careGiverPhoneCountryCode
        - careGiverPhoneNumber
        - careplan
        - email
        - firstName
        - identifier
        - lastName
        - medicalConditions
        - namePrefix
        - phoneCountryCode
        - phoneNumber
        - preferredGenres
select_permissions:
  - role: benchmark
    permission:
      columns:
        - canBenchmark
        - createdAt
        - id
        - identifier
        - nickname
        - preferredGenres
        - updatedAt
      filter: {}
  - role: org_admin
    permission:
      columns:
        - createdAt
        - email
        - firstName
        - id
        - identifier
        - lastName
        - namePrefix
        - nickname
        - phoneCountryCode
        - phoneNumber
        - subscription
      filter:
        organizationId:
          _eq: x-hasura-organization-id
      allow_aggregations: true
  - role: patient
    permission:
      columns:
        - careGiverEmail
        - careGiverPhoneCountryCode
        - careGiverPhoneNumber
        - context
        - createdAt
        - customerId
        - email
        - firstName
        - genreChoice
        - id
        - identifier
        - lastName
        - medicalConditions
        - nickname
        - onboardedBy
        - onboardingStatus
        - phoneCountryCode
        - phoneNumber
        - preferredActivities
        - preferredGenres
        - primaryTherapist
        - rewards
        - timezone
        - updatedAt
      filter:
        id:
          _eq: X-Hasura-User-Id
  - role: sh_admin
    permission:
      columns:
        - id
      filter: {}
      allow_aggregations: true
  - role: therapist
    permission:
      columns:
        - careGiverEmail
        - careGiverPhoneCountryCode
        - careGiverPhoneNumber
        - careplan
        - createdAt
        - email
        - firstName
        - id
        - identifier
        - lastName
        - medicalConditions
        - namePrefix
        - nickname
        - onboardedBy
        - onboardingStatus
        - organizationId
        - phoneCountryCode
        - phoneNumber
        - preferredActivities
        - preferredGenres
        - primaryTherapist
        - rewards
        - status
        - subscription
        - timezone
        - type
        - updatedAt
      filter:
        organizationId:
          _eq: x-hasura-organization-id
      allow_aggregations: true
update_permissions:
  - role: benchmark
    permission:
      columns:
        - careGiverEmail
        - careGiverPhoneCountryCode
        - careGiverPhoneNumber
        - email
        - medicalConditions
        - nickname
        - onboardingStatus
        - password
        - phoneCountryCode
        - phoneNumber
        - preferredActivities
        - preferredGenres
        - timezone
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: null
  - role: patient
    permission:
      columns:
        - careGiverEmail
        - careGiverPhoneCountryCode
        - careGiverPhoneNumber
        - email
        - firstName
        - genreChoice
        - lastName
        - lastPiiChangeReason
        - medicalConditions
        - namePrefix
        - nickname
        - onboardingStatus
        - password
        - phoneCountryCode
        - phoneNumber
        - preferredActivities
        - preferredGenres
        - timezone
      filter:
        id:
          _eq: X-Hasura-User-Id
      check: null
  - role: therapist
    permission:
      columns:
        - email
        - firstName
        - lastName
        - lastPiiChangeReason
        - namePrefix
        - phoneCountryCode
        - phoneNumber
        - status
      filter:
        organizationId:
          _eq: x-hasura-organization-id
      check: null
event_triggers:
  - name: event_added_first_patient
    definition:
      enable_manual: true
      insert:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/events/therapist/added-first-patient'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "id": {{$body.event.data.new.id}},
            "identifier": {{$body.event.data.new.identifier}},
            "primaryTherapist": {{$body.event.data.new.primaryTherapist}}
          }
      template_engine: Kriti
      version: 2
  - name: event_new_patient
    definition:
      enable_manual: true
      insert:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/events/patient/new'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "id": {{$body.event.data.new.id}},
            "email": {{$body.event.data.new.email}},
            "nickname": {{$body.event.data.new.nickname}},
            "namePrefix": {{$body.event.data.new.namePrefix}},
            "firstName": {{$body.event.data.new.firstName}},
            "lastName": {{$body.event.data.new.lastName}},
            "phoneCountryCode": {{$body.event.data.new.phoneCountryCode}},
            "phoneNumber": {{$body.event.data.new.phoneNumber}},
            "organizationId": {{$body.event.data.new.organizationId}}
          }
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
  - name: event_new_phi
    definition:
      enable_manual: true
      insert:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/phi/tokenize'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {{$body.event}},
            "table": {{$body.table}}
          }
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
  - name: update_patient
    definition:
      enable_manual: true
      update:
        columns:
          - id
          - lastName
          - phoneCountryCode
          - email
          - namePrefix
          - identifier
          - phoneNumber
          - nickname
          - firstName
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/events/patient/update'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "id": {{$body.event.data.new.id}},
            "email": {{$body.event.data.new.email}},
            "nickname": {{$body.event.data.new.nickname}},
            "namePrefix": {{$body.event.data.new.namePrefix}},
            "firstName": {{$body.event.data.new.firstName}},
            "lastName": {{$body.event.data.new.lastName}},
            "phoneCountryCode": {{$body.event.data.new.phoneCountryCode}},
            "phoneNumber": {{$body.event.data.new.phoneNumber}}
          }
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
  - name: update_patient_email
    definition:
      enable_manual: true
      update:
        columns:
          - email
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/phi/tokenize/email'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {{$body.event}},
            "table": {{$body.table}}
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
  - name: update_patient_firstName
    definition:
      enable_manual: false
      update:
        columns:
          - firstName
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/phi/tokenize/firstName'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {{$body.event}},
            "table": {{$body.table}}
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
  - name: update_patient_lastName
    definition:
      enable_manual: false
      update:
        columns:
          - lastName
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/phi/tokenize/lastName'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {{$body.event}},
            "table": {{$body.table}}
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
  - name: update_patient_nickname
    definition:
      enable_manual: false
      update:
        columns:
          - nickname
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/phi/tokenize/nickname'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {{$body.event}},
            "table": {{$body.table}}
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
  - name: update_patient_phoneNumber
    definition:
      enable_manual: false
      update:
        columns:
          - phoneNumber
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/phi/tokenize/phoneNumber'
    headers:
      - name: x-hasura-admin-secret
        value_from_env: EVENTS_SECRET
    request_transform:
      body:
        action: transform
        template: |-
          {
            "event": {{$body.event}},
            "table": {{$body.table}}
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
    cleanup_config:
      batch_size: 10000
      clean_invocation_logs: false
      clear_older_than: 168
      paused: true
      schedule: 0 0 * * *
      timeout: 60
