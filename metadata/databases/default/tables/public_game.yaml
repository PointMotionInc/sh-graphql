table:
  name: game
  schema: public
object_relationships:
  - name: game_name
    using:
      foreign_key_constraint_on: game
  - name: patientByPatient
    using:
      foreign_key_constraint_on: patient
insert_permissions:
  - role: patient
    permission:
      check:
        patient:
          _eq: X-Hasura-User-Id
      set:
        patient: x-hasura-user-id
      columns:
        - createdAt
        - game
        - updatedAt
select_permissions:
  - role: benchmark
    permission:
      columns:
        - calibrationDuration
        - repsCompleted
        - totalDuration
        - aggregateAnalytics
        - analytics
        - game
        - createdAt
        - endedAt
        - updatedAt
        - id
        - patient
      filter: {}
  - role: patient
    permission:
      columns:
        - analytics
        - calibrationDuration
        - createdAt
        - endedAt
        - game
        - id
        - patient
        - repsCompleted
        - totalDuration
        - updatedAt
      filter:
        patient:
          _eq: X-Hasura-User-Id
  - role: therapist
    permission:
      columns:
        - id
        - createdAt
        - updatedAt
        - endedAt
        - game
        - repsCompleted
        - totalDuration
        - analytics
        - patient
        - calibrationDuration
        - aggregateAnalytics
      filter: {}
      allow_aggregations: true
update_permissions:
  - role: patient
    permission:
      columns:
        - analytics
        - calibrationDuration
        - endedAt
        - repsCompleted
        - totalDuration
      filter:
        patient:
          _eq: X-Hasura-User-Id
      check: null
event_triggers:
  - name: game_created
    definition:
      enable_manual: false
      insert:
        columns: '*'
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/events/game/start'
    request_transform:
      body:
        action: transform
        template: |-
          {
            "patientId": {{$body.event.data.new.patient}},
            "createdAt": {{$body.event.data.new.createdAt}}
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
  - name: game_ended
    definition:
      enable_manual: true
      update:
        columns:
          - endedAt
    retry_conf:
      interval_sec: 10
      num_retries: 0
      timeout_sec: 60
    webhook: '{{ACTION_BASE_URL}}/events/game/end'
    request_transform:
      body:
        action: transform
        template: |-
          {
            "gameId": {{$body.event.data.new.id}},
            "patientId": {{$body.event.data.new.patient}},
            "analytics": {{$body.event.data.new.analytics}},
            "endedAt": {{$body.event.data.new.endedAt}}
          }
      method: POST
      query_params: {}
      template_engine: Kriti
      version: 2
