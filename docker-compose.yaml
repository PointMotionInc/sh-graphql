version: '3.6'
services:
  postgres:
    container_name: "local_postgres"
    image: postgres:12
    ports:
    - "5432:5432"
    restart: unless-stopped
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  graphql-engine:
    container_name: "local_hasura"
    image: hasura/graphql-engine:v2.13.2.cli-migrations-v3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: unless-stopped
    volumes:
      - ./migrations:/hasura-migrations
      - ./metadata:/hasura-metadata
    environment:
      HASURA_ENV: ${HASURA_ENV}
      HASURA_GRAPHQL_METADATA_DATABASE_URL: ${HASURA_GRAPHQL_METADATA_DATABASE_URL}
      HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_DEV_MODE: ${HASURA_GRAPHQL_DEV_MODE}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${HASURA_GRAPHQL_UNAUTHORIZED_ROLE}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: ${HASURA_GRAPHQL_ENABLED_LOG_TYPES}
      HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS: ${HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS}

      # NestJS Origin
      ACTION_BASE_URL: ${ACTION_BASE_URL}

      # Use the script `run.sh` to open the console
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE}

      PHI_REMOTE_SCHEMA_ADMIN_SECRET: ${PHI_REMOTE_SCHEMA_ADMIN_SECRET}
      PHI_REMOTE_SCHEMA_URL: ${PHI_REMOTE_SCHEMA_URL}

      # To secure NestJS Hasura events endpoints
      EVENTS_SECRET: ${EVENTS_SECRET}

      # Keep this same as NestJS .env value of GQL_API_ADMIN_SECRET
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}

      # Keep this same as NestJS .env value of JWT_SECRET
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET}
volumes:
  db_data:
